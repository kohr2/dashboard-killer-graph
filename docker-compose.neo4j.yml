# Neo4j Knowledge Graph Database Setup
# Docker Compose configuration for local development

version: '3.8'

services:
  neo4j:
    image: neo4j:5.15-community
    container_name: crm-neo4j
    restart: unless-stopped
    environment:
      # Authentication
      NEO4J_AUTH: neo4j/fiboocream
      
      # Database settings
      NEO4J_dbms_memory_heap_initial__size: 512M
      NEO4J_dbms_memory_heap_max__size: 1G
      NEO4J_dbms_memory_pagecache_size: 256M
      
      # Enable APOC procedures for advanced graph algorithms
      NEO4J_APOC_EXPORT_FILE_ENABLED: "true"
      NEO4J_APOC_IMPORT_FILE_ENABLED: "true"
      NEO4J_APOC_IMPORT_FILE_USE__NEO4J__CONFIG: "true"
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*,gds.*
      
      # Logging
      NEO4J_dbms_logs_debug_level: INFO
      
    ports:
      # Bolt protocol for drivers
      - "7687:7687"
      # HTTP interface
      - "7474:7474"
      # HTTPS interface  
      - "7473:7473"
      
    volumes:
      # Persist data
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      
    networks:
      - crm_network

  # Optional: Neo4j Browser (alternative web interface)
  neo4j-browser:
    image: neo4j:5.15-community
    container_name: crm-neo4j-browser
    depends_on:
      - neo4j
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password
    ports:
      - "8080:7474"
    networks:
      - crm_network

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  crm_network:
    driver: bridge

# Usage:
# 1. Start Neo4j: docker-compose -f docker-compose.neo4j.yml up -d
# 2. Access Browser: http://localhost:7474
# 3. Connect with: bolt://localhost:7687, neo4j/password
# 4. Stop: docker-compose -f docker-compose.neo4j.yml down 